# Space Opera - A Multiplayer Science Fiction Game Engine
# Copyright (C) 2002 Jean-Paul Calderone
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#

#
# This file was auto-generated by Twisted Reality.
#

from Reality.reality import reference
from Reality.thing import Thing
from Reality.player import Player
from Reality.container import Container

from sopera import SpaceOpera, Room, Player, Guest, GuestFactory
import skills

from objects import Ship, RadioFactory

t=reference.Reference
m=reference.AttributeReference
from Reality import thing
result = thing._default = SpaceOpera('Space Opera')

result.defaultStartRoom = Room('The Void')(
    description='Nothing is here, and here is nowhere.  There are no exits, and nothing from which to leave.'
)

airlock = Room('An Airlock')(
    description='This is the main airlock of the good ship Lollipop.'
)

Ship('The Good Ship Lollipop', airlock)(
    location = result.defaultStartRoom,
    synonyms = ['lollipop', 'ship']
)

RadioFactory('Radio Factory')(
    location=result.defaultStartRoom,
    synonyms=['factory']
)

kuran = Player('kuran')(
    location=result.defaultStartRoom,
    password='\x99rw\x8c\xb1\xdfOv/i\xce\xa1\xa3\xed\x07\xf5'
)
g = skills.GrantCapability(kuran, None)
for i in skills.GrantCapability.__implements__:
    kuran.setComponent(i, g)
del kuran, g, i

gL = []  # Guest list
guests = (
    'Object Oriented Guest', 'Open Source Guest', 'P2P Guest', 'Broadband Guest',
    'Cross Platform Guest', 'Dynamic Guest', 'Enterprise Wide Guest', 'Intranet Guest',
    'Fault Tolerant Guest', 'Internet Enabled Guest', 'Intuitive Guest', 'Java Guest',
    'Mission Critical Guest', 'Multimedia Guest', 'Multitasking Guest', 'Multithreaded Guest',
    'Multiuser Guest', 'Networked Guest', 'Proactive Guest', 'Robust Guest', 'Scalable Guest',
    'Scratch-And-Sniff Guest', 'ThemeableGuest', 'Web-Based Guest'
)
for name in guests:
    gL.append(Guest(name)(
        description = '',
        factory = t('guest'),
        synonyms = name.lower().split()
    ))
del guests

GuestFactory('guest')(
    description='',
    guests=gL,
    start=result.defaultStartRoom
)
del gL
