
"""
An interactive demonstration of L{xmantissa.test.scrolltable}

Run this test like this::
    $ twistd -n athena-widget --element=xmantissa.test.acceptance.scrolltable.scroller
    $ firefox http://localhost:8080/

This will display a large scrollable table, containing 5000 rows.
"""

import time

from epsilon.extime import Time

from axiom.store import Store

from axiom.item import Item

from axiom.attributes import integer, text, timestamp

from xmantissa.scrolltable import ScrollingElement
from xmantissa.webtheme import getLoader



class Sample(Item):
    """
    A sample item which will be used as the rows in the table displayed.
    """

    quantity = integer(indexed=True)
    title = text()
    date = timestamp(indexed=True)



def populate(aStore, itemCount=5000):
    """
    Populate the store.

    @param aStore: an Axiom store to populate

    @param itemCount: the number of L{Sample} items to create.
    """
    now = time.time()
    def fxn():
        for x in xrange(itemCount):
            yield (x * 2, u"Number %d" %(x,), Time.fromPOSIXTimestamp(now - x))
    aStore.batchInsert(Sample, [Sample.quantity, Sample.title, Sample.date],
                       fxn())



class FakeTranslator(object):
    """
    This is a fake implementation of IWebTranslator to simplify testing.
    """
    def __init__(self, aStore):
        """
        Create a FakeTranslator from a store.
        """
        self.store = aStore


    def toWebID(self, theItem):
        """
        Generate a simple webID for a given row.
        """
        return str(theItem.storeID)


    def fromWebID(self, webID):
        """
        Retrieve a given item from an ID generated by FakeTranslator.toWebID.
        """
        return self.store.getItemByID(int(webID))



def scroller():
    """
    Create a scrolling element with a large number of rows for use in an
    interactive demonstration.
    """
    aStore = Store()
    populate(aStore)
    se = ScrollingElement(aStore, Sample, None,
                          [Sample.quantity, Sample.title, Sample.date],
                          webTranslator=FakeTranslator(aStore))
    se.docFactory = getLoader(se.fragmentName)
    return se
